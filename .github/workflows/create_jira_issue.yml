name: Create Jira Issue on GitHub Issue Open

on:
  issues:
    types:
      - opened

jobs:
  create-jira-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Create Issue in Jira (via REST API)
        id: jira_issue_creation
        uses: actions/github-script@v6
        with:
          # 스크립트 실행을 위해 Node.js 환경에서 JIRA_BASE_URL 필요
          script: |
            const JIRA_API_ENDPOINT = `${process.env.JIRA_BASE_URL}/rest/api/3/issue`;
            const JIRA_PROJECT_KEY = process.env.JIRA_PROJECT_KEY;
            
            const issueData = {
              fields: {
                project: { key: JIRA_PROJECT_KEY },
                summary: context.payload.issue.title,
                issuetype: { name: 'Story' },
                description: {
                  type: 'doc',
                  version: 1,
                  content: [
                    {
                      type: 'paragraph',
                      content: [{
                        type: 'text',
                        text: `[GitHub Issue Link](${context.payload.issue.html_url})\n\nDescription:\n${context.payload.issue.body}`
                      }]
                    }
                  ]
                }
              }
            };
            
            const response = await fetch(JIRA_API_ENDPOINT, {
              method: 'POST',
              headers: {
                'Authorization': `Basic ${Buffer.from(`${process.env.JIRA_USER_EMAIL}:${process.env.JIRA_API_TOKEN}`).toString('base64')}`,
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(issueData),
            });
            
            if (!response.ok) {
              const errorBody = await response.text();
              throw new Error(`Jira API failed: ${response.statusText}. Response: ${errorBody}`);
            }
            
            const jiraIssue = await response.json();
            
            console.log(`Jira Issue created: ${jiraIssue.key}`);
            core.setOutput('issue', jiraIssue.key);

        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}

      - name: Add Jira Key to Github Issue
        uses: actions/github-script@v6
        with:
          script: |
            const jiraKey = '${{ steps.jira_issue_creation.outputs.issue }}';
            
            // 1. GitHub 이슈 본문에 Jira 링크 추가
            const body = `${{ github.event.issue.body }}\n\n---
            **[Jira Issue](${ process.env.JIRA_BASE_URL }/browse/${jiraKey})**`;
            
            // 2. 중복 생성 방지 레이블 및 GitHub 레이블 추가
            const labels = [...github.event.issue.labels.map(l => l.name), 'synced-from-jira'];
            
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body,
              labels: labels
            });
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
